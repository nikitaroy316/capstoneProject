{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaroy/Desktop/Nikita_Personal/web_dev/capstone_project/my-app/src/pages/Reservations/Reservations.js\";\nimport React, { useState } from \"react\";\nimport \"./Reservations.css\";\nimport BookingForm from \"../../components/BookingForm/BookingForm\";\nimport Popup from \"../../components/Popup/Popup\";\nimport { useNavigate } from \"react-router-dom\";\nimport pages from \"../../utils/pages\";\nimport { useReducer } from \"react\";\nimport { fetchAPI } from \"../../utils/Api\";\nconst Reservations = () => {\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const navigate = useNavigate();\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const handleFormSubmit = (e, formValues) => {\n    e.preventDefault();\n    setIsFormSubmitted(true);\n    const areAllFieldsFilled = Object.values(formValues).every(value => value);\n    if (areAllFieldsFilled) setIsPopupVisible(true);\n  };\n  const updateTimes = (availableTimes, date) => {\n    const response = fetchAPI(new Date(date));\n    return response.length !== 0 ? response : availableTimes;\n  };\n  const initializeTimes = initialAvailableTimes => [...initialAvailableTimes, ...fetchAPI(new Date())];\n  const [availableTimes, dispatchOnDateChange] = useReducer(updateTimes, [], initializeTimes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reservation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reservation-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"reservation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Table Reservation\"), /*#__PURE__*/React.createElement(BookingForm, {\n    availableTimes: availableTimes,\n    dispatchOnDateChange: dispatchOnDateChange,\n    onFormSubmit: handleFormSubmit,\n    isFormSubmitted: isFormSubmitted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), isPopupVisible && /*#__PURE__*/React.createElement(Popup, {\n    onClose: () => {\n      setIsPopupVisible(false);\n      navigate(pages.get(\"home\").path);\n    },\n    title: \"reservation completed!!\",\n    description: \"Thank you for choosing Little Lemon! Your reservation has been successfully made. You will receive a confirmation email with the details of your reservation. We are excited to see you soon!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }));\n};\nexport default Reservations;","map":{"version":3,"names":["React","useState","BookingForm","Popup","useNavigate","pages","useReducer","fetchAPI","Reservations","isPopupVisible","setIsPopupVisible","navigate","isFormSubmitted","setIsFormSubmitted","handleFormSubmit","e","formValues","preventDefault","areAllFieldsFilled","Object","values","every","value","updateTimes","availableTimes","date","response","Date","length","initializeTimes","initialAvailableTimes","dispatchOnDateChange","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onFormSubmit","onClose","get","path","title","description"],"sources":["/Users/nikitaroy/Desktop/Nikita_Personal/web_dev/capstone_project/my-app/src/pages/Reservations/Reservations.js"],"sourcesContent":["import React, { useState  } from \"react\";\nimport \"./Reservations.css\";\nimport BookingForm from \"../../components/BookingForm/BookingForm\";\nimport Popup from \"../../components/Popup/Popup\";\nimport { useNavigate } from \"react-router-dom\";\nimport pages from \"../../utils/pages\";\nimport { useReducer } from \"react\";\nimport { fetchAPI } from \"../../utils/Api\";\n\nconst Reservations = () => {\n    const [isPopupVisible, setIsPopupVisible] = useState(false);\n    const navigate = useNavigate();\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n    const handleFormSubmit = (e, formValues) => {\n        e.preventDefault();\n        setIsFormSubmitted(true);\n        const areAllFieldsFilled = Object.values(formValues).every(\n            (value) => value\n        );\n\n        if(areAllFieldsFilled)\n            setIsPopupVisible(true);\n    };\n\n    const updateTimes = (availableTimes,date) => {\n        const response = fetchAPI(new Date(date));\n        return response.length !== 0 ? response : availableTimes;\n    };\n\n    const initializeTimes = (initialAvailableTimes) => [\n        ...initialAvailableTimes,\n        ...fetchAPI(new Date()),\n    ];\n\n    const [availableTimes, dispatchOnDateChange] = useReducer(\n        updateTimes,\n        [],\n        initializeTimes,\n    );\n\n\n    return (\n        <div className=\"reservation\">\n            <div className=\"reservation-card\">\n                <h1 className=\"reservation-title\">Table Reservation</h1>\n                <BookingForm\n                    availableTimes={availableTimes}\n                    dispatchOnDateChange={dispatchOnDateChange}\n                    onFormSubmit={handleFormSubmit}\n                    isFormSubmitted={isFormSubmitted}\n                />\n            </div>\n\n            {isPopupVisible && (\n                <Popup\n                    onClose={() => {\n                        setIsPopupVisible(false);\n                        navigate(pages.get(\"home\").path);\n                }}\n                title=\"reservation completed!!\"\n                description=\"Thank you for choosing Little Lemon! Your reservation has been successfully made. You will receive a confirmation email with the details of your reservation. We are excited to see you soon!\"\n               />\n            )}\n        </div>\n    );\n};\n\n\nexport default Reservations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}